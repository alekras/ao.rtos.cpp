
ARM_TOOLS_PATH = /opt/gcc-arm/latest
EXEC = ${ARM_TOOLS_PATH}/bin/arm-none-eabi
CPP_LIBS = ${ARM_TOOLS_PATH}/lib/gcc/arm-none-eabi/10.3.1
COPTS = -c -std=c++11 -Wno-write-strings -O2 -mfpu=neon-vfpv4 -mfloat-abi=hard -march=armv7-a -mtune=cortex-a7 -nostdlib -nostartfiles -ffreestanding -fno-rtti -fno-exceptions

PORT_DIR = ${ROOT_DIR}/Porting/ARM-Raspberry_Pi
PORTING_OBJ_DIR = ${GCC_DIR}/Porting
RPI_VERSION = RPI2

INCLUDE_PATHS := -I ${PORT_DIR}/Include ${INCLUDE_PATHS}

${TARGET_DIR}/application.hex : ${GCC_DIR}/application.elf
	@echo GCC-ARM creates HEX file from elf file
	@${EXEC}-objcopy $< -O ihex $@


${GCC_DIR}/application.elf : prepare ${GCC_DIR}/Application/main.o ${GCC_DIR}/libapp.a ${GCC_DIR}/libkern.a ${GCC_DIR}/libaortos.a ${GCC_DIR}/libport.a
	@echo linker makes application.elf 
	@${EXEC}-ld ${PORTING_OBJ_DIR}/arm_cpu.o ${GCC_DIR}/Application/main.o \
	-L${CPP_LIBS} -L${GCC_DIR} \
	-lapp \
	-lkern \
	-laortos \
	-lport \
	-lgcc -Map ${LISTING_DIR}/map.lst -T ${objDir}/loader -o $@
	@${EXEC}-objdump -D $@ > ${LISTING_DIR}/application.lst
